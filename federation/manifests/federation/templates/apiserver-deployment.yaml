apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{.Values.apiserverName}}
  namespace: {{.Values.namespace}}
  labels:
    app: federated-cluster
spec:
  template:
    metadata:
      name: {{.Values.apiserverName}}
      labels:
        app: federated-cluster
        module: federation-apiserver
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
          {
            "name": "init",
            "image": "{{.Values.apiserverInitRegistry}}/init:{{.Values.apiserverInitVersion}}",
            "args": [
              "--namespace={{.Values.namespace}}",
              "--secret={{.Values.apiserverName}}-credentials",
              "--controllermanager-kubeconfig-secret={{.Values.controllerManagerName}}-kubeconfig",
              "--service={{.Values.apiserverName}}"
            ]
          }
        ]'
    spec:
      containers:
      - name: apiserver
        image: {{.Values.apiserverRegistry}}/hyperkube-amd64:{{.Values.apiserverVersion}}
        command:
        - /hyperkube
        - federation-apiserver
        - --bind-address=0.0.0.0
        - --etcd-servers=http://localhost:2379
        - --service-cluster-ip-range={{.Values.apiserverServiceCIDR}}
        - --secure-port=443
        - --advertise-address=$(API_SERVER_SVC_ENDPOINT)
        # TODO: --admission-control values must be set when support is added for each type of control.
        - --token-auth-file=/etc/federation/apiserver/known_tokens.csv
        - --basic-auth-file=/etc/federation/apiserver/basic_auth.csv
        - --client-ca-file=/etc/federation/apiserver/ca.crt
        - --tls-cert-file=/etc/federation/apiserver/server.crt
        - --tls-private-key-file=/etc/federation/apiserver/server.key
        ports:
        - containerPort: 443
          name: https
        - containerPort: 8080
          name: local
        env:
        - name: API_SERVER_SVC_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{.Values.apiserverName}}-endpoint
              key: endpoint
        volumeMounts:
        - name: {{.Values.apiserverName}}-credentials
          mountPath: /etc/federation/apiserver
          readOnly: true
      - name: etcd
        image: quay.io/coreos/etcd:v2.3.3
        command:
          - /etcd
          - --data-dir
          - /var/etcd/data
        volumeMounts:
        - mountPath: /var/etcd
          name: varetcd
      volumes:
      - name: {{.Values.apiserverName}}-credentials
        secret:
          secretName: {{.Values.apiserverName}}-credentials
      - name: varetcd
        persistentVolumeClaim:
          claimName: {{.Values.apiserverName}}-etcd-claim
